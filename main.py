# # 1. Користувач вводить рядок з клавіатури.
# # Порахуйте кількість літер, цифр у рядку.
# # Виведіть обидві кількості на екран.
# # (використовувати цикл)
#
# # Запит для користувача ввести рядок з клавіатури
# user_input = input("Введіть рядок: ")
#
# # Створення лічильників для кількості літер та цифр
# count_letters = 0
# count_digits = 0
#
# # Пошук потрібного значення в рядку
# for char in user_input:
#     # Цикл перевірки на літеру
#     if char.isalpha():
#         count_letters += 1
#     # Цикл перевірки на цифру
#     elif char.isdigit():
#         count_digits += 1
#
# # Результат в термінал
# print("Кількість літер: ", count_letters)
# print("Кількість цифр: ", count_digits)


# # 2. Користувач вводить з клавіатури рядок та символ для пошуку.
# # Порахуйте скільки разів у рядку зустрічається потрібний символ.
# # Отримане число виведіть на екран.
#
# # Запит для користувача ввести рядок з клавіатури
# user_input = input("Введіть рядок: ")
#
# # Запит для користувача ввести символ для пошуку в рядку
# search_char = input("Введіть символ для пошуку: ")
#
# # Створення лічильників для кількості певного символа
# count_characters = 0
#
# # Пошук потрібного значення в рядку
# for char in user_input:
#     # Перевірка потрібного символу
#     if char == search_char:
#         count_characters += 1
#
# # Результат в термінал
# print(f"Символ '{search_char}' зустрічається у рядку {count_characters} разів.")

# # 3. Користувач вводить з клавіатури рядок, слово для пошуку, слово для заміни.
# # Зробіть у рядку заміну одного слова на інше.
# # Отриманий рядок на екрані.
#
# # Запит для користувача ввести рядок з клавіатури
# user_input = input("Введіть рядок: ")
#
# # Запит для користувача ввести слово або словосполучення для пошуку в рядку
# word_search = input("Введіть слово або словосполучення для пошуку: ")
#
# # Запит для користувача ввести слово або словосполучення для заміни в рядку
# word_change = input("Введіть слово або словосполучення для заміни: ")
#
# # Заміна одного слова або словосполучення на інше
# user_result = user_input.replace(word_search, word_change)
#
# # Результат в термінал
# print("Отриманий рядок після заміни слова або слоповсполучення:", user_result)

# # 4. Дано рядок. (зробити зрізи)
#
# # Запит для користувача ввести рядок з клавіатури
# user_input = input("Введіть рядок: ")
#
# # - Спершу виведіть третій символ цього рядка.
# print("Третій символ:", user_input[2])
#
# # - У другому рядку виведіть передостанній символ цього рядка.
# print("Передостанній символ:", user_input[-2])
#
# # - У третьому рядку виведіть перші п'ять символів цього рядка.
# print("Перші п'ять символів:", user_input[:5])
#
# # - У четвертому рядку виведіть весь рядок, крім двох останніх символів.
# print("Весь рядок без двох останніх символів:", user_input[:-2])
#
# # - У п'ятому рядку виведіть усі символи з парними індексами (вважаючи, що індексація починається з 0, тому символи виводяться з першого).
# print("Усі символи з парними індексами:", user_input[::2])
#
# # - У шостому рядку виведіть усі символи з непарними індексами, тобто, починаючи з другого символу рядка.
# print("Усі символи з непарними індексами:", user_input[1::2])
#
# # - У сьомому рядку виведіть усі символи у зворотному порядку.
# print("Усі символи у зворотному порядку:", user_input[::-1])
#
# # - У восьмому рядку виведіть усі символи рядка через один у зворотному порядку, починаючи з останнього.
# print("Усі символи рядка через один у зворотному порядку:", user_input[-1::-2])
#
# # - У дев'ятому рядку виведіть довжину цього рядка.
# print("Довжина рядка:", len(user_input))

# # Додатково:
# # Є певний текст. Реалізуйте наступну функціональність:
# def modify_text(text):
#     # ■ Змінити текст таким чином, щоб кожне речення починалися з великої літери;
#     modified_text = ". ".join(sentence.capitalize() for sentence in text.split(". "))
#
#     # ■ Порахуйте скільки разів цифри зустрічаються у тексті;
#     count_digits = sum(char.isdigit() for char in text)
#
#     # ■ Порахуйте скільки разів розділові знаки зустрічаються в тексті;
#     punctuation_chars = "!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~"
#     count_punctuation = sum(char in punctuation_chars for char in text)
#
#     # ■ Порахуйте кількість знаків оклику в тексті.
#     count_exclamation = text.count('!')
#
#     return modified_text, count_digits, count_punctuation, count_exclamation
#
#
# # Випробування функціональності
# user_text = "преобразуйте любой текст в заглавные буквы с помощью конвертера верхнего регистра. все существующие заглавные буквы сохранятся, а все строчные изменятся на заглавные. используя только заглавные буквы, вы сможете привлечь внимание читателей. с помощью этого конвертера вы легко и быстро преобразуете заголовки, названия и тексты большого объема в заглавные буквы."
# result, count_digits, count_punctuation, count_exclamation = modify_text(user_text)
#
# # Результат в термінал
# print("Змінений текст:")
# print(result)
# print("Кількість цифр у тексті:", count_digits)
# print("Кількість розділових знаків у тексті:", count_punctuation)
# print("Кількість знаків оклику у тексті:", )

# # Цикли
# # Вывести на экран фигуры, заполненные звездочками. Диалог с пользователем реализовать при помощи меню
# def draw_square(size):
#     for _ in range(size):
#         print('*' * size)
#
# def draw_triangle(height):
#     for i in range(height):
#         print('*' * (i + 1))
#
# def draw_envelope_with_flap(width, height):
#     for i in range(height):
#         if i == 0 or i == height - 1:
#             print('*' * width)
#         elif i == height // 2:
#             flap_size = max(2, width - 4)  # Мінімум 2, щоб було простіше розрізняти при непарних розмірах
#             print('*' + ' ' * ((width - flap_size) // 2) + '*' * flap_size + ' ' * ((width - flap_size) // 2) + '*')
#         else:
#             print('*' + ' ' * (width - 2) + '*')
#
# def draw_sand_clock(size):
#     for i in range(size, 0, -1):
#         print(' ' * (size - i) + '*' * (2 * i - 1))
#     for i in range(2, size + 1):
#         print(' ' * (size - i) + '*' * (2 * i - 1))
#
# def draw_diamond(size):
#     for i in range(size):
#         print(' ' * (size - i - 1) + '*' * (2 * i + 1))
#     for i in range(size - 2, -1, -1):
#         print(' ' * (size - i - 1) + '*' * (2 * i + 1))
#
# def main():
#     choice = None
#
#     while choice != 0:
#         print("Вибери фігури для відображення:")
#         print("1 - Квадрат")
#         print("2 - Трикутник")
#         print("3 - Конверт")
#         print("4 - Годинник")
#         print("5 - Ромб")
#         print("0 - Вийди отсюда, розбійник")
#
#         try:
#             choice = int(input("Вказуй свій вибір: "))
#         except ValueError:
#             print("Щось пішло не так. Ще раз введи правильну цифру вибору.")
#             continue
#
#         if choice == 1:
#             size = int(input("Введи розмір квадрату: "))
#             draw_square(size)
#         elif choice == 2:
#             height = int(input("Введи висоту трикутника: "))
#             draw_triangle(height)
#         elif choice == 3:
#             width = int(input("Введи ширину конверту: "))
#             height = int(input("Введи висоту конверту: "))
#             draw_envelope_with_flap(width, height)
#         elif choice == 4:
#             size = int(input("Введи розмір годинника: "))
#             draw_sand_clock(size)
#         elif choice == 5:
#             size = int(input("Введи розмір ромбу: "))
#             draw_diamond(size)
#         elif choice == 0:
#             print("Вихід...")
#         else:
#             print("Невірний вибір! Введи правильний варіант.")
#
# if __name__ == "__main__":
#     main()
